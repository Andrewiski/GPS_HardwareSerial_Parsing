<!DOCTYPE html>
<html>
<head>
	<meta http-equiv="Content-type" content="text/html; charset=utf-8">
	<title>GPS Monitor</title>
	<style>
		#map {
			height: 700px;
			width: 100%;
		}
		.gpsLogFile{
			cursor:pointer;

		}
	</style>

	<!--<link href="/webserver/includes/bootstrap/css/bootstrap.min.css" rel="stylesheet" />
	<link href="/webserver/includes/bootstrap/css/bootstrap-theme.min.css" rel="stylesheet" />-->
	<!--<link href="/webserver/includes/animate-css/animate.min.css" rel="stylesheet" />-->
	<!--<script src="/webserver/includes/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>-->
	<!--<script src="/webserver/includes/bootstrap-notify/bootstrap-notify.min.js" type="text/javascript"></script>-->

	<!--<link href="/webserver/includes/fontawesome/css/font-awesome.min.css" rel="stylesheet" />
	<script src="/webserver/includes/jquery/jquery-3.5.1.min.js" type="text/javascript"></script>
	<script src="/webserver/includes/moment/moment.min.js" type="text/javascript"></script>-->

	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css" integrity="sha256-eZrrJcwDc/3uDhsdt61sL2oOBY362qM3lon1gyExkL0=" crossorigin="anonymous" />
	<script src="https://code.jquery.com/jquery-3.5.1.min.js" type="text/javascript"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.26.0/moment-with-locales.min.js" integrity="sha256-4HOrwHz9ACPZBxAav7mYYlbeMiAL0h6+lZ36cLNpR+E=" crossorigin="anonymous"></script>
	<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBP-sX_MQ4FVCbm2v478-vEcubrio73lS4" type="text/javascript"></script>
	<script>

		var sampleData = [
			{ "valid": true, "lat": 37.727, "lng": -96.707, "date": "2020-05-12T19:21:26.000Z", "ang": 182 },
			{ "valid": true, "lat": 38.971, "lng": -92.713, "date": "2020-05-12T19:21:26.000Z", "ang": 182 },
			{ "valid": true, "lat": 36.172, "lng": -89.415, "date": "2020-05-12T19:21:26.000Z", "ang": 182 }
		];


        var refreshRate = 10000;
        var getCurrentPathInterval = null;
		var map = null;
		var mapCenter = { lat: 39.000000, lng: -99.000000 };
		var position = { lat: 39.000000, lng: -99.000000 };
		var GpsCoordinates = [];
		var GpsCoordinates0 = [];
		var trackPath = null;
		var askedDate = null;
		var infoWindow = null;

		function setMapOnAll(map) {
			for (var i = 0; i < GpsCoordinates0.length; i++) {
				GpsCoordinates0[i].setMap(map);
			}
		}

		function getUrlVars() {
			var vars = [], hash;
			var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');
			for (var i = 0; i < hashes.length; i++) {
				hash = hashes[i].split('=');
				vars.push(hash[0]);
				vars[hash[0]] = hash[1];
			}
			return vars;
		}
		var qs = getUrlVars();
		function initMap() {
			map = new google.maps.Map(document.getElementById('map'), {
				zoom: 4,
				center: mapCenter
			});

			trackPath = new google.maps.Polyline({
				geodesic: true,
				strokeColor: '#FF0000',
				strokeOpacity: 1.0,
				strokeWeight: 2
			});
			// Create the DIV to hold the control and call the CenterControl()
			// constructor passing in this DIV.
			var controlsDiv = $('.googleMapControls')
			controlsDiv.find(".btnCurrentLocation").on("click", centerMapCurrentPositionClick);
			controlsDiv.find(".btnCurrentPath").on("click", getCurrentPathClick);

			// Setup the click event listeners: simply set the map to Chicago.
			//controlUI.addEventListener('click', function() {
			//  map.setCenter(chicago);
			//});

			controlsDiv.index = 1;
			map.controls[google.maps.ControlPosition.TOP_RIGHT].push(controlsDiv[0]);
		}

        function centerMapCurrentPositionClick() {
			stopCurrentPathTimer();
            centerMapCurrentPosition();
            
        }

        function getCurrentPathClick() {
            getCurrentPath();
            startCurrentPathTimer();
        }

		function getGPSCurrentPosition() {
			var defer = $.Deferred();

			askedDate = document.getElementById("Date").value;
			$.ajax({
				url: "/getCurrentPosition",
				dataType: "json",
				data: null
			}).then(function (data) {
				defer.resolve(data);
			}, function (jqXHR, textStatus, errorThrown) {
				console.log("Error Getting Current Position", textStatus, errorThrown);
				defer.reject(jqXHR, textStatus, errorThrown);
			})
			return defer.promise();
		}

		function getGPSCurrentPath() {
			var defer = $.Deferred();

			askedDate = document.getElementById("Date").value;
			$.ajax({
				url: "/getCurrentPath",
				dataType: "json",
				data: null
			}).then(function (data) {
				defer.resolve(data);
			}, function (jqXHR, textStatus, errorThrown) {
				console.log("Error Getting Current Position", textStatus, errorThrown);
				defer.reject(jqXHR, textStatus, errorThrown);
			})
			return defer.promise();
		}

        function startCurrentPathTimer() {
            if (getCurrentPathInterval == null) {
				getCurrentPathInterval = setInterval(getGPSCurrentPath, refreshRate);
            }
        }

		function stopCurrentPathTimer() {
            if (getCurrentPathInterval !== null) {
                clearInterval(getCurrentPathInterval);
				getCurrentPathInterval = null;
            }
        }

		function getGPSData() {
			var defer = $.Deferred();
			if (qs.debug) {
				defer.resolve(sampleData);
			} else {
				askedDate = document.getElementById("Date").value;
				$.ajax({
					url: "/getGpsData?Date=" + askedDate,
					dataType: "json",
					data: null
				}).then(function (data) {
					defer.resolve(data);
				}, function (jqXHR, textStatus, errorThrown) {
					console.log("Error Getting Position", textStatus, errorThrown);
					defer.reject(jqXHR, textStatus, errorThrown);
				})
			}
			return defer.promise();
		}

		function getGPSLogFiles() {
			var defer = $.Deferred();
			if (qs.debug) {
				defer.resolve(sampleData);
			} else {
				askedDate = document.getElementById("Date").value;
				$.ajax({
					url: "/list?dir=/gpsLogs",
					dataType: "json",
					data: null
				}).then(function (data) {
					defer.resolve(data);
				}, function (jqXHR, textStatus, errorThrown) {
					console.log("Error Getting Gps Log Files", textStatus, errorThrown);
					defer.reject(jqXHR, textStatus, errorThrown);
				})
			}
			return defer.promise();
		}
		function centerMapCurrentPosition() {
			console.log("Getting Current Position");

			getGPSCurrentPosition().then(function (data) {

				if (data.valid == true) {
					map.setCenter({ lat: data.lat, lng: data.lng });
					map.setZoom(9);

				} else {
					alert("No Valid GPS Fix Yet");
				} //setTimeout(updateMap, refreshRate);
			}, function (jqXHR, textStatus, errorThrown) {
				console.log("Error Getting GPS Data", textStatus, errorThrown);
				//setTimeout(updateMap, refreshRate);
			})
		};

		function getCurrentPath() {
			console.log("Getting Current Path");

			getGPSCurrentPath().then(function (data) {


				setMapOnAll(null);
				GpsCoordinates0 = [];
				trackPath.setMap(null);
				GpsCoordinates = [];
				$.each(data, function (index, item) {
					if (item.valid === true) {
						position.lat = item.lat;
						position.lng = item.lng;
						//console.log("Got Position", position);
						GpsCoordinates.push({ lat: item.lat, lng: item.lng });

						infoWindow = new google.maps.InfoWindow({
							position: position,
							Content: moment(item.time).format("LTS") + "<br/> Speed:" + item.speed + "<br/>Angle:" + item.angle,
							map: map
						});
						GpsCoordinates0.push(infoWindow);
					}
				});
				console.log("coordinates are", GpsCoordinates);
				//drawPolyLines();
				trackPath.setPath(GpsCoordinates);
				trackPath.setMap(map);
				//setTimeout(updateMap, refreshRate);
			}, function (jqXHR, textStatus, errorThrown) {
				console.log("Error Getting GPS Data", textStatus, errorThrown);
				//setTimeout(updateMap, refreshRate);
			})
		};


		function getGpsLogFile(evt) {
			console.log("Getting GPS Log File");
            var fileName = $(evt.currentTarget).attr("data-file");
            $.get({ url: '/gpsLogs/' + fileName }).then(function (data) {


                //var data = JSON.parse("[" + rawFile + "]");

				setMapOnAll(null);
				GpsCoordinates0 = [];
				trackPath.setMap(null);
				GpsCoordinates = [];
				$.each(data, function (index, item) {
					position.lat = item.lat;
					position.lng = item.lng;
					//console.log("Got Position", position);
					GpsCoordinates.push({ lat: item.lat, lng: item.lng });



					infoWindow = new google.maps.InfoWindow({
						position: position,
						Content:  moment(item.time).format("LTS"),
						map: map
					});
					GpsCoordinates0.push(infoWindow);
				});
				//console.log("coordinates are", GpsCoordinates);
				//drawPolyLines();
				trackPath.setPath(GpsCoordinates);
				trackPath.setMap(map);
				
			}, function (jqXHR, textStatus, errorThrown) {
				console.log("Error Getting GPS Data", textStatus, errorThrown);
				//setTimeout(updateMap, refreshRate);
			})
		};
		/*function drawPolyLines() {
		   trackPath = new google.maps.Polyline({
				   path: GpsCoordinates,
				   geodesic: true,
				   strokeColor: '#FF0000',
				   strokeOpacity: 1.0,
				   strokeWeight: 2
		   });
		   trackPath.setMap(map);

		}*/
		var getAutoConnectMenu = function () {
			if (!qs.debug) {
				$("div.menu").load("/autoconnectMenu");
			}
        }
        
		$(document).ready(function () {

			getAutoConnectMenu();
			initMap();
			centerMapCurrentPosition();
            $('.btnGpsFileRefresh').on("click", function () {
                getGPSLogFiles().then(
                    function (data) {
						var gpsFileList = $('.gpsLogFiles')
                        gpsFileList.empty();
						$.each(data, function (index, item) {
                            gpsFileList.append('<tr><td><div class="gpsLogFile" data-file="' + item.name + '">' + item.name + '</div></td></tr>');	
                        });
                        $('.gpsLogFile').on("click", getGpsLogFile);
						
                    },
                    function (jqXHR, textStatus, errorThrown) {
						console.log("Error Getting GPS Files", textStatus, errorThrown);
						//setTimeout(updateMap, refreshRate);
	                }
                )
			});
		});
	</script>
</head>
    <body>
	
		<div style="width:100%">
			<div style="display:inline-block; float:left"><div class="menu"></div></div>
			<div style="width:100%; text-align: center">
				<h3>Teo GPS Tracker</h3>
			</div>
			<div style="display:inline-block">
				<label for="Date">        Choose The Date:</label>
				<input type="date" id="Date" name="Date">
				<button class="searchForFile">Search!</button>
			</div>
			

			<div style="width:100%">
				<table style="width:100%">
					<tr>
						<td style="width:100px">
							<table>
								<thead>
									<tr>
										<th><div class="btnGpsFileRefresh"><i class="fa fa-refresh"></i></div></th>
									</tr>
								</thead>
								<tbody class="gpsLogFiles">

								</tbody>
							</table>
						</td>
						<td><div id="map"></div></td>
					</tr>
				</table>
			</div>
		</div>
		<div class="templates" style="display:none">
			<div class="googleMapControls">
				<div style="background-color: rgb(255, 255, 255); border: 2px solid rgb(255, 255, 255); border-radius: 3px; box-shadow: rgba(0, 0, 0, 0.3) 0px 2px 6px; margin-bottom: 22px; margin-right:22px; margin-top:22px; text-align: center;">
					<div class="btnCurrentLocation" title="Current Position" style="color: rgb(25, 25, 25); font-family: Roboto, Arial, sans-serif; font-size: 16px; line-height: 38px; padding-left: 5px; padding-right: 5px; cursor: pointer;">
						<i class="fa fa-location-arrow "></i>
					</div>
					<div class="btnCurrentPath" title="Current Path" style="color: rgb(25, 25, 25); font-family: Roboto, Arial, sans-serif; font-size: 16px; line-height: 38px; padding-left: 5px; padding-right: 5px; cursor: pointer;">
						<i class="fa fa-map-o" aria-hidden="true"></i>
					</div>
				</div>
			</div>

			<table>
				<tr class="gpsLogFile"></tr>
			</table>
		</div>
</body>
</html>
